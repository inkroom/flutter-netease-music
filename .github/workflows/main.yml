name: CI

on:
  push:
    tags:
      - 'v*'

jobs:
  linux:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.7.3'
          channel: 'stable'
          cache: false
      - name: Flutter Config
        run: flutter config --enable-linux-desktop
#   github 的机器居然也会出现 镜像连不上问题，不知道是哪边的问题
          # sudo sed -i "s@http://.*archive.ubuntu.com@https://mirrors.tuna.tsinghua.edu.cn@g" /etc/apt/sources.list
          # sudo sed -i "s@http://.*security.ubuntu.com@https://mirrors.tuna.tsinghua.edu.cn@g" /etc/apt/sources.list
      - name: Patch for linux build
        run: |
          sudo sed -i "s@http://.*archive.ubuntu.com@http://repo.huaweicloud.com@g" /etc/apt/sources.list
          sudo sed -i "s@http://.*security.ubuntu.com@http://repo.huaweicloud.com@g" /etc/apt/sources.list
          sudo apt update -y
      - name: Patch for linux build
        run: |
          sudo apt-get install -y ninja-build libgtk-3-dev
      - name: Patch for linux build
        run: |
          sudo apt install -y libayatana-appindicator3-dev
      - name: Install Minio
        run: |
          wget https://dl.min.io/client/mc/release/linux-amd64/mc
          chmod +x mc
          ./mc alias set bc ${{ secrets.MINIO_SITE}} ${{ secrets.MINIO_USER }} ${{ secrets.MINIO_PASSWORD }} --api s3v2
      - name: Dependency
        run: flutter pub get
      - name: Build
        run: sh deb.sh ${GITHUB_REF_NAME:1}
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/linux/x64/release/quiet-linux-${{ github.ref_name }}.deb"
          draft: true
          allowUpdates: true
  windows:
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.7.3'
          channel: 'stable'
          cache: false
      - name: Install Minio
        run: |
          npm install --global download-cli
          download https://dl.min.io/client/mc/release/windows-amd64/mc.exe > mc.exe
          setx "Path" "%Path%;%RUNNER_WORKSPACE%" /m
#          .\mc.exe alias set bc ${{ secrets.MINIO_SITE}} ${{ secrets.MINIO_USER }} ${{ secrets.MINIO_PASSWORD }} --api s3v2
      - name: Dependency
        run: flutter pub get
      - name: Build
        run: .\w.bat %GITHUB_REF_NAME:~1%
      - name: Zip
        uses: vimtor/action-zip@v1
        with:
          files: build/windows/runner/Release/
          dest: quiet-windows-${{ github.ref_name }}.zip
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "quiet-windows-${{ github.ref_name }}.zip"
          draft: true
          allowUpdates: true
  android:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.7.3'
          channel: 'stable'
          cache: false
      - name: Install Minio
        run: |
          wget https://dl.min.io/client/mc/release/linux-amd64/mc
          chmod +x mc
          ./mc alias set bc ${{ secrets.MINIO_SITE}} ${{ secrets.MINIO_USER }} ${{ secrets.MINIO_PASSWORD }} --api s3v2
      - name: Create the Keystore
        env:
          APK_KEY_STORE_BASE64: ${{ secrets.APK_KEY_STORE_BASE64 }}
          APK_KEY_PROPERTIES_BASE64: ${{ secrets.APK_KEY_PROPERTIES_BASE64 }}
        run: |
          # import keystore from secrets
          ls -all
          echo $APK_KEY_STORE_BASE64 | base64 -di > android/app/upload-keystore.jks
          echo $APK_KEY_PROPERTIES_BASE64 | base64 -di > android/key.properties
      - name: Dependency
        run: flutter pub get
      - name: Build
        run: sh a.sh ${GITHUB_REF_NAME:1}
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/release/*"
          draft: true
          allowUpdates: true
  release:
    runs-on: ubuntu-20.04
    needs: [linux, android, windows]
    steps: 
      - name: Checkout
        uses: actions/checkout@v3
      - name: Update version
        run: |
          echo "update android version"
          sed -i '15c     "version": "'${GITHUB_REF_NAME:1}'",' version.json
          sed -i '17c     "file": "quiet/'$GITHUB_REF_NAME'/quiet-android-'$GITHUB_REF_NAME'.apk",' version.json
          echo "update linux version"
          sed -i '3c     "version": "'${GITHUB_REF_NAME:1}'",' version.json
          sed -i '5c     "file": "quiet/'$GITHUB_REF_NAME'/quiet-linux-'$GITHUB_REF_NAME'.deb",' version.json
          echo "update windows version"
          sed -i '9c     "version": "'${GITHUB_REF_NAME:1}'",' version.json
          sed -i '11c     "file": "quiet/'$GITHUB_REF_NAME'/quiet-windows-'$GITHUB_REF_NAME'.zip",' version.json
          sed -i '12c     "url":"https://github.com/inkroom/flutter-netease-music/releases/download/'$GITHUB_REF_NAME'/quiet-windows-'$GITHUB_REF_NAME'.zip"' version.json
      - name: Install Minio
        run: |
          wget https://dl.min.io/client/mc/release/linux-amd64/mc
          chmod +x mc
          ./mc alias set bc ${{ secrets.MINIO_SITE}} ${{ secrets.MINIO_USER }} ${{ secrets.MINIO_PASSWORD }} --api s3v2
          ./mc cp version.json bc/temp
          ./mc cp version.json bc/temp/quiet
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "version.json"
          allowUpdates: true
          draft: false
      - name: Notify
        if: failure()
        run: |
          curl -d "${{ github.repository }}  ${{ github.ref_name  }}  上传构建失败" -H 't: ${{ github.repository }} action' ntfy.sh/inkbox_inkbox
  fail:
    runs-on: ubuntu-20.04
    needs: [linux, android, windows] # 最好是在 release 也失败后执行 ，但是如果前置任务失败， release直接不执行，导致fail 也不会执行
    if: failure()
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Notify
        continue-on-error: true
        run: |
          curl -d "${{ github.repository }}  ${{ github.ref_name  }}  构建失败" -H 't: ${{ github.repository }} action' ntfy.sh/inkbox_inkbox
      - name: Delete tag
        uses: pr-mpt/actions-delete-tag@v1
        continue-on-error: true
      - name: Delete Release 
        run: gh release delete ${{ github.ref_name  }}
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  success:
    runs-on: ubuntu-20.04
    needs: [release]
    steps:
      - name: Notify
        run: |
          curl -d "${{ github.repository }}  ${{ github.ref_name  }}  构建成功" -H 't: ${{ github.repository }} action' ntfy.sh/inkbox_inkbox
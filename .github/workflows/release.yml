name: release

on:
  push:
    branches: [ 'master' ]
    tags:
      - 'v*'
    paths-ignore:
      - 'README.md'
  workflow_dispatch:
jobs:
  linux:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Read Version
        uses: pietrobolcato/action-read-yaml@1.1.0
        id: yaml
        with:
          config: 'pubspec.yaml'
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.5'
          channel: 'stable'
          cache: false
      - name: Flutter Config
        run: flutter config --enable-linux-desktop
          #   github 的机器居然也会出现 镜像连不上问题，不知道是哪边的问题
          # sudo sed -i "s@http://.*archive.ubuntu.com@https://mirrors.tuna.tsinghua.edu.cn@g" /etc/apt/sources.list
        # sudo sed -i "s@http://.*security.ubuntu.com@https://mirrors.tuna.tsinghua.edu.cn@g" /etc/apt/sources.list
      - name: Update Runtime
        run: |
          sudo apt update -y && sudo apt upgrade -y
      - name: Patch for Build
        run: |
          sudo apt install -y ninja-build libgtk-3-dev
      - name: Patch for Runtime
        run: |
          sudo apt install -y libappindicator3-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev 
      - name: Dependency
        run: flutter pub get
      - name: Build
        run: sh deb.sh ${{ steps.yaml.outputs['version'] }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: quiet
          path: build/linux/x64/release/quiet-linux-v${{ steps.yaml.outputs['version'] }}.deb
  windows:
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Read Version
        uses: pietrobolcato/action-read-yaml@1.1.0
        id: yaml
        with:
          config: 'pubspec.yaml'
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.5'
          channel: 'stable'
          cache: false
      - name: Dependency
        run: flutter pub get
      - name: Build
        env:
          QUIET_VERSION: ${{ steps.yaml.outputs['version'] }}
        run: |
          .\w.bat %QUIET_VERSION%
      - name: Zip
        uses: vimtor/action-zip@v1
        with:
          files: build/windows/runner/Release/
          dest: quiet-windows-v${{  steps.yaml.outputs['version'] }}.zip
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: quiet
          path: quiet-windows-v${{ steps.yaml.outputs['version'] }}.zip
  android:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Read Version
        uses: pietrobolcato/action-read-yaml@1.1.0
        id: yaml
        with:
          config: 'pubspec.yaml'
      - name: Install Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.5'
          channel: 'stable'
          cache: false
      - name: Create the Keystore
        env:
          APK_KEY_STORE_BASE64: ${{ secrets.APK_KEY_STORE_BASE64 }}
          APK_KEY_PROPERTIES_BASE64: ${{ secrets.APK_KEY_PROPERTIES_BASE64 }}
        run: |
          # import keystore from secrets
          ls -all
          echo $APK_KEY_STORE_BASE64 | base64 -di > android/app/upload-keystore.jks
          echo $APK_KEY_PROPERTIES_BASE64 | base64 -di > android/key.properties
      - name: Dependency
        run: flutter pub get
      - name: Build
        run: sh a.sh ${{ steps.yaml.outputs['version'] }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: quiet
          path: "build/app/outputs/apk/release/*"
  release:
    runs-on: ubuntu-20.04
    needs: [linux, android, windows]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Read Version
        uses: pietrobolcato/action-read-yaml@1.1.0
        id: yaml
        with:
          config: 'pubspec.yaml'
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: quiet
          path: quiet/
      - name: Update Version
        run: |
          echo "update github version"

          export QUIET_HOST=https://github.com/inkroom/flutter-netease-music/releases/download
          export QUIET_VERSION=v${{ steps.yaml.outputs['version'] }}
          export QUIET_VERSION_NUMBER=${{ steps.yaml.outputs['version'] }}
          export QUIET_VERSION_DES=$QUIET_VERSION
          
          envsubst < version.json > github-version.json
          
          echo "update minio version"
          export QUIET_HOST=https://temp1.inkroom.cn/temp/quiet 
          envsubst < version.json > minio-version.json
          
          echo "update cos version"
          export QUIET_HOST=https://windows-1252774288.cos.ap-chengdu.myqcloud.com/quiet
          envsubst < version.json > cos-version.json

      - name: Upload To Cos
        uses: TencentCloud/cos-action@b0aa648235fb35a1bdd6a77f529eb0ac4c2f1c25
        with:
          secret_id: ${{ secrets.COS_SECRET_ID }}
          secret_key: ${{ secrets.COS_SECRET_KEY }}
          cos_bucket: ${{ secrets.COS_BUCKET }}
          cos_region: ${{ secrets.COS_REGION }}
          accelerate: true
          local_path: quiet
          remote_path: v${{ steps.yaml.outputs['version'] }}
      - name: Upload To Cos Version
        uses: TencentCloud/cos-action@b0aa648235fb35a1bdd6a77f529eb0ac4c2f1c25
        with:
          secret_id: ${{ secrets.COS_SECRET_ID }}
          secret_key: ${{ secrets.COS_SECRET_KEY }}
          cos_bucket: ${{ secrets.COS_BUCKET }}
          cos_region: ${{ secrets.COS_REGION }}
          accelerate: true
          local_path: cos-version.json
          remote_path: version.json
      - name: Upload To Minio
        run: |
          wget https://dl.min.io/client/mc/release/linux-amd64/mc
          chmod +x mc
          ./mc alias set ink ${{ secrets.MINIO_SITE}} ${{ secrets.MINIO_USER }} ${{ secrets.MINIO_PASSWORD }} --api s3v2
          ./mc cp -r quiet/* ink/temp/quiet/v${{ steps.yaml.outputs['version'] }}/
          ./mc cp minio-version.json ink/temp/quiet/version.json
      - name: Release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          cp github-version.json quiet/version.json
          gh release create --target master v${{ steps.yaml.outputs['version'] }} ./quiet/*
      - name: Notify
        if: failure()
        run: |
          curl -d "${{ github.repository }}  v${{ steps.yaml.outputs['version'] }}  上传构建失败" -H 't: ${{ github.repository }} action' ntfy.sh/inkbox_inkbox
  fail:
    runs-on: ubuntu-20.04
    needs: [linux, android, windows] # 最好是在 release 也失败后执行 ，但是如果前置任务失败， release直接不执行，导致fail 也不会执行
    if: failure()
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Read Version
        uses: pietrobolcato/action-read-yaml@1.1.0
        id: yaml
        with:
          config: 'pubspec.yaml'
      - name: Notify
        continue-on-error: true
        run: |
          curl -d "${{ github.repository }}  ${{ steps.yaml.outputs['version'] }}  构建失败" -H 't: ${{ github.repository }} action' ntfy.sh/inkbox_inkbox
      - name: Delete tag
        uses: pr-mpt/actions-delete-tag@v1
        continue-on-error: true
      - name: Delete Release
        run: gh release delete ${{ github.ref_name  }}
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  success:
    runs-on: ubuntu-20.04
    needs: [release]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Read Version
        uses: pietrobolcato/action-read-yaml@1.1.0
        id: yaml
        with:
          config: 'pubspec.yaml'
      - name: Notify
        run: |
          curl -d "${{ github.repository }}  ${{ steps.yaml.outputs['version'] }}  构建成功" -H 't: ${{ github.repository }} action' ntfy.sh/inkbox_inkbox
